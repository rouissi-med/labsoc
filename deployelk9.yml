---
- name: Deploy ELK Stack on single node
  hosts: node1
  become: yes
  vars:
    elasticsearch_version: "9.0.0"
    kibana_version: "9.0.0"
    logstash_version: "9.0.0"

  tasks:
    - name: Install Java
      dnf:
        name: java-17-openjdk
        state: present

    - name: Add Elasticsearch repository
      copy:
        dest: /etc/yum.repos.d/elasticsearch.repo
        content: |
          [elasticsearch-9.x]
          name=Elasticsearch repository for 9.x packages
          baseurl=https://artifacts.elastic.co/packages/9.x/yum
          gpgcheck=1
          gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
          enabled=1
          autorefresh=1
          type=rpm-md

    - name: Set vm.max_map_count
      sysctl:
        name: vm.max_map_count
        value: "262144"
        state: present
        reload: yes

    - name: Set file descriptor limits
      lineinfile:
        path: /etc/security/limits.conf
        line: "elasticsearch - nofile 65535"
        state: present

    - name: Install Elasticsearch
      dnf:
        name: elasticsearch-{{ elasticsearch_version }}
        state: present
        enablerepo: elasticsearch-9.x

    - name: Ensure certificate directory exists
      file:
        path: /etc/elasticsearch/certs
        state: directory
        owner: elasticsearch
        group: elasticsearch
        mode: '0750'

    - name: Check if CA certificate exists
      stat:
        path: /etc/elasticsearch/certs/ca.p12
      register: ca_cert

    - name: Generate CA certificate if not exists
      command: /usr/share/elasticsearch/bin/elasticsearch-certutil ca --out /etc/elasticsearch/certs/ca.p12 --pass ""
      when: not ca_cert.stat.exists
      changed_when: true

    - name: Check if http certificate exists
      stat:
        path: /etc/elasticsearch/certs/http.p12
      register: http_cert

    - name: Generate http certificate if not exists
      command: /usr/share/elasticsearch/bin/elasticsearch-certutil cert --ca /etc/elasticsearch/certs/ca.p12 --out /etc/elasticsearch/certs/http.p12 --pass ""
      when: not http_cert.stat.exists
      changed_when: true

    - name: Check if transport certificate exists
      stat:
        path: /etc/elasticsearch/certs/transport.p12
      register: transport_cert

    - name: Generate transport certificate if not exists
      command: /usr/share/elasticsearch/bin/elasticsearch-certutil cert --ca /etc/elasticsearch/certs/ca.p12 --out /etc/elasticsearch/certs/transport.p12 --pass ""
      when: not transport_cert.stat.exists
      changed_when: true

    - name: Set permissions for certificates
      file:
        path: /etc/elasticsearch/certs
        owner: elasticsearch
        group: elasticsearch
        mode: '0750'
        recurse: true

    - name: Configure Elasticsearch
      copy:
        dest: /etc/elasticsearch/elasticsearch.yml
        content: |
          cluster.name: my-elk-cluster
          node.name: node1
          network.host: 0.0.0.0
          discovery.type: single-node
          path.data: /var/lib/elasticsearch
          path.logs: /var/log/elasticsearch
          xpack.security.enabled: true
          xpack.security.enrollment.enabled: true
          xpack.security.http.ssl.enabled: true
          xpack.security.http.ssl.keystore.path: certs/server.p12
          xpack.security.transport.ssl.enabled: true
          xpack.security.transport.ssl.verification_mode: certificate
          xpack.security.transport.ssl.keystore_path: certs/server.p12
          xpack.security.transport.ssl.truststore_path: certs/server.p12
          http.port: 9200
        owner: elasticsearch
        group: elasticsearch
        mode: '0640'
      notify: restart_elasticsearch

    - name: Start and enable Elasticsearch
      systemd:
        name: elasticsearch
        state: started
        enabled: yes

    - name: Check if elastic password is set
      ansible.builtin.command: curl -k curl -u elastic:{{ elastic_password | default('changeme') }} https://localhost:9200
      register: elastic_check
      ignore_errors: yes
      changed_when: false

    - name: Setup Elasticsearch passwords if not set
      command: /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto --batch
      register: password_setup
      changed_when: true
      when: elastic_check.rc != 0

    - name: Extract elastic user password
      set_fact:
        elastic_password: "{{ password_setup.stdout | regex_search('PASSWORD elastic = ([^\n]+)', '\\1') | first }}"
      when: password_setup is not skipped and password_setup.stdout

    - name: Debug elastic password
      debug:
        msg: "Elastic password is set to {{ elastic_password }}"
      when: elastic_password is defined

    - name: Wait for Elasticsearch to be available
      uri:
        url: https://localhost:9200
        status_code: 200
        validate_certs: no
        user: elastic
        password: "{{ elastic_password }}"
        force_basic_auth: yes
      register: result
      retries: 30
      delay: 10
      until: result.status == 200
      when: elastic_password is defined

    - name: Install Kibana
      dnf:
        name: kibana-{{ kibana_version }}
        state: present
        enablerepo: elasticsearch-9.x

    - name: Configure Kibana
      copy:
        dest: /etc/kibana/kibana.yml
        content: |
          server.port: 5601
          server.host: "0.0.0.0"
          elasticsearch.hosts: ["https://localhost:9200"]
          elasticsearch.username: "elastic"
          elasticsearch.password: "{{ elastic_password }}"
          elasticsearch.ssl.verificationMode: none
          pid.file: /run/kibana/kibana.pid
        owner: kibana
        group: kibana
        mode: '0640'
      notify: restart_kibana

    - name: Start and enable Kibana
      systemd:
        name: kibana
        state: started
        enabled: yes

    - name: Install Logstash
      dnf:
        name: logstash-{{ logstash_version }}
        state: present
        enablerepo: elasticsearch-9.x

    - name: Start and enable Logstash
      systemd:
        name: logstash
        state: started
        enabled: yes

  handlers:
    - name: restart_elasticsearch
      systemd:
        name: elasticsearch
        state: restarted

    - name: restart_kibana
      systemd:
        name: kibana
        state: restarted
